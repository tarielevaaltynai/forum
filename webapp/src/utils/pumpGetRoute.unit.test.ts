// –≤—Ä–µ–º–µ–Ω–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ–º –±–∞–∑–æ–≤—ã–π –∞–¥—Ä–µ—Å —Å–∞–π—Ç–∞, —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, –∫–∞–∫ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è –ø–æ–ª–Ω—ã–π (–∞–±—Å–æ–ª—é—Ç–Ω—ã–π) –ø—É—Ç—å.
process.env.WEBAPP_URL = "https://example.com";

// –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é pgr, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–º–æ–≥–∞–µ—Ç —É–¥–æ–±–Ω–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø—É—Ç–∏ (routes) –≤ React-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ —Å –ø–æ–º–æ—â—å—é react-router-dom.
import { pgr } from "./pumpGetRoute";

describe("pgr", () => {
  //  –¢–µ—Å—Ç: –ø—Ä–æ—Å—Ç–æ–π –ø—É—Ç—å –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
  it("return simple route", () => {
    // —Å–æ–∑–¥–∞—ë–º –ø—Ä–æ—Å—Ç–æ–π –º–∞—Ä—à—Ä—É—Ç –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
    const getSimpleRoute = pgr(() => "/simple");

    // –æ–∂–∏–¥–∞–µ–º, —á—Ç–æ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ –æ–Ω –≤–µ—Ä–Ω—ë—Ç —Å—Ç—Ä–æ–∫—É "/simple"
    expect(getSimpleRoute()).toBe("/simple");
  });

  // –¢–µ—Å—Ç: –ø—É—Ç—å —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
  it("return route with params", () => {
    // —Å–æ–∑–¥–∞—ë–º –º–∞—Ä—à—Ä—É—Ç —Å –¥–≤—É–º—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏: param1 –∏ param2
    const getWithParamsRoute = pgr(
      { param1: true, param2: true },
      ({ param1, param2 }) => `/a/${param1}/b/${param2}/c`
    );

    // –æ–∂–∏–¥–∞–µ–º, —á—Ç–æ –ø—Ä–∏ –ø–µ—Ä–µ–¥–∞—á–µ –∑–Ω–∞—á–µ–Ω–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥—Å—Ç–∞–≤—è—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ
    expect(getWithParamsRoute({ param1: "xxx", param2: "yyy" })).toBe(
      "/a/xxx/b/yyy/c"
    );
  });

  //  –¢–µ—Å—Ç: –ø—Ä–æ–≤–µ—Ä–∫–∞ —à–∞–±–ª–æ–Ω–∞ –º–∞—Ä—à—Ä—É—Ç–∞ (definition)
  it("return route definition", () => {
    // —Å–æ–∑–¥–∞—ë–º –º–∞—Ä—à—Ä—É—Ç —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
    const getWithParamsRoute = pgr(
      { param1: true, param2: true },
      ({ param1, param2 }) => `/a/${param1}/b/${param2}/c`
    );

    // –æ–∂–∏–¥–∞–µ–º, —á—Ç–æ definition –±—É–¥–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –ø—É—Ç—å —Å :param1 –∏ :param2
    expect(getWithParamsRoute.definition).toBe("/a/:param1/b/:param2/c");
  });

  // üß™ –¢–µ—Å—Ç: –ø—Ä–æ–≤–µ—Ä–∫–∞ placeholders (–∑–∞–≥–ª—É—à–µ–∫) ‚Äî –æ–Ω–∏ –Ω—É–∂–Ω—ã, —á—Ç–æ–±—ã –∑–Ω–∞—Ç—å, –∫–∞–∫–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –µ—Å—Ç—å
  it("return route placeholders", () => {
    const getWithParamsRoute = pgr(
      { param1: true, param2: true },
      ({ param1, param2 }) => `/a/${param1}/b/${param2}/c`
    );

    // –æ–∂–∏–¥–∞–µ–º, —á—Ç–æ placeholders –±—É–¥—É—Ç –≤–∏–¥–∞ { param1: ":param1", param2: ":param2" }
    expect(getWithParamsRoute.placeholders).toMatchObject({
      param1: ":param1",
      param2: ":param2",
    });
  });

  // üß™ –¢–µ—Å—Ç: –ø—Ä–æ–≤–µ—Ä–∫–∞ –∞–±—Å–æ–ª—é—Ç–Ω–æ–≥–æ –ø—É—Ç–∏ (—Å –¥–æ–º–µ–Ω–æ–º)
  it("return absolute route", () => {
    // —Å–æ–∑–¥–∞—ë–º –ø—Ä–æ—Å—Ç–æ–π –º–∞—Ä—à—Ä—É—Ç
    const getSimpleRoute = pgr(() => "/simple");

    // –ø–µ—Ä–µ–¥–∞—ë–º –ø–∞—Ä–∞–º–µ—Ç—Ä abs: true, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª–Ω—ã–π –ø—É—Ç—å —Å –¥–æ–º–µ–Ω–æ–º
    expect(getSimpleRoute({ abs: true })).toBe("https://example.com/simple");
  });
});
